name: Build Static Wget with SSL

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: 初始化环境
        run: |
          sudo apt update
          sudo apt -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3 unzip zlib1g-dev file

      - name: 下载并解压 OpenWrt SDK
        run: |
          wget https://downloads.openwrt.org/releases/18.06.5/targets/mediatek/mt7622/openwrt-sdk-18.06.5-mediatek-mt7622_gcc-7.3.0_musl.Linux-x86_64.tar.xz
          tar -xJf openwrt-sdk-*.tar.xz
          if [ -e sdk ]; then
            rm -rf sdk
          fi
          mv openwrt-sdk-* sdk

      - name: 下载 wget 源码并放入 package
        working-directory: ./sdk/package
        run: |
          mkdir -p wget
          cd wget
          curl -sL https://downloads.openwrt.org/releases/18.06.5/packages/aarch64_cortex-a53/base/wget_1.19.5-1_aarch64_cortex-a53.ipk -o wget.ipk
          # 或者自己编写 Makefile 来构建源码包（推荐）

      - name: 修改为静态编译（以已有 Makefile 为基础）
        working-directory: ./sdk/package/wget
        run: |
          wget https://raw.githubusercontent.com/openwrt/packages/openwrt-18.06/net/wget/Makefile -O Makefile
          sed -i '/CONFIGURE_ARGS/ a\ \t--enable-static --disable-shared' Makefile
          echo 'TARGET_CFLAGS += -static' >> Makefile

      - name: 编译 wget
        working-directory: ./sdk
        run: |
          make defconfig
          make package/wget/compile V=s

      - name: 上传静态 wget
        uses: actions/upload-artifact@v4
        with:
          name: wget-static
          path: |
            sdk/build_dir/target-*/wget-*/src/wget
